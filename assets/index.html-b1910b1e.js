import{_ as o,r as s,o as c,c as i,a as n,b as t,d as a,e as l}from"./app-1bbcc8ed.js";const u="/blog-website/assets/record-710cfc9b.gif",d={},r=l('<h1 id="制作一个可拖动的悬浮按钮" tabindex="-1"><a class="header-anchor" href="#制作一个可拖动的悬浮按钮" aria-hidden="true">#</a> 制作一个可拖动的悬浮按钮</h1><img src="'+u+`" alt="效果演示" style="zoom:80%;"><p>在这篇博客中，我们将介绍如何创建一个可以拖动的悬浮按钮，就像你在移动应用程序中经常见到的那种。这个按钮将允许用户通过触摸屏幕来移动它的位置，让你了解如何使用 HTML、CSS 和 JavaScript 来实现这一效果。我们会以尽量通俗易懂的方式来解释这个思路，然后逐步展示代码。</p><h2 id="效果介绍" tabindex="-1"><a class="header-anchor" href="#效果介绍" aria-hidden="true">#</a> 效果介绍</h2><p>在我们开始之前，让我们看一下我们要实现的效果。我们将创建一个笑脸图标，可以在网页上拖动。这个按钮会一直保持在屏幕的右下角，但用户可以通过触摸屏幕来移动它到他们喜欢的位置。</p><h2 id="思路概述" tabindex="-1"><a class="header-anchor" href="#思路概述" aria-hidden="true">#</a> 思路概述</h2><p>首先，我们需要明确我们的目标。我们想要实现一个可拖动的悬浮按钮，这需要以下几个步骤：</p><ol><li><p>创建 HTML 结构：我们将创建一个 HTML 文档，其中包括笑脸按钮的标记以及必要的元素。</p></li><li><p>设置 CSS 样式：我们将使用 CSS 来定义按钮的样式，包括其位置、大小和样式。</p></li><li><p>编写 JavaScript：我们将使用 JavaScript 来实现拖动功能。这需要事件处理，以便跟踪用户的触摸手势，以及一些计算以确定按钮的位置。</p></li><li><p>用户交互：最后，我们会将按钮的交互部分与用户的触摸手势相关联，从而实现拖动效果。</p></li></ol><p>接下来，我们将按照这个思路逐步展示代码。</p><h2 id="创建-html-结构" tabindex="-1"><a class="header-anchor" href="#创建-html-结构" aria-hidden="true">#</a> 创建 HTML 结构</h2><p>首先，让我们创建 HTML 结构。我们将使用一个<code>&lt;div&gt;</code>元素来表示悬浮按钮，并在其中放置一个笑脸图标。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 省略不重要的部分 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flot-btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>🤣<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 省略不重要的部分 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个<code>&lt;div&gt;</code>元素有一个类名<code>flot-btn</code>，我们将在 CSS 中使用它来样式化按钮。</p><h2 id="设置-css-样式" tabindex="-1"><a class="header-anchor" href="#设置-css-样式" aria-hidden="true">#</a> 设置 CSS 样式</h2><p>接下来，我们将使用 CSS 来定义按钮的样式。我们将按钮放在右下角，并定义其大小、样式和阴影。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">&lt;style&gt;
  *</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">body</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.flot-btn</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>
    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">border-radius</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
    <span class="token property">line-height</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>
    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 10px #ccc<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
&lt;/style&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段 CSS 代码确保按钮具有适当的样式，包括大小、位置和阴影。</p><h2 id="编写-javascript" tabindex="-1"><a class="header-anchor" href="#编写-javascript" aria-hidden="true">#</a> 编写 JavaScript</h2><p>现在，让我们开始使用 JavaScript 来实现按钮的拖动功能。首先，我们需要获取悬浮按钮的元素。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取悬浮按钮元素</span>
<span class="token keyword">const</span> flotBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.flot-btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 初始化按钮的初始位置</span>
<span class="token keyword">let</span> right <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> bottom <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们使用<code>document.querySelector</code>来获取悬浮按钮的引用，并初始化<code>right</code>和<code>bottom</code>变量以跟踪按钮的位置。</p><p>接下来，我们将添加事件监听器，以便在用户触摸屏幕时触发移动事件。我们将使用<code>touchstart</code>和<code>touchmove</code>事件来实现这一点。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 添加touchstart事件监听器</span>
flotBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;touchstart&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 获取手指按下的坐标</span>
  <span class="token keyword">const</span> startX <span class="token operator">=</span> e<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token punctuation">;</span>
  <span class="token keyword">const</span> startY <span class="token operator">=</span> e<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token punctuation">;</span>

  <span class="token comment">// 添加touchmove事件监听器</span>
  flotBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;touchmove&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取手指移动的坐标</span>
    <span class="token keyword">const</span> moveX <span class="token operator">=</span> e<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token punctuation">;</span>
    <span class="token keyword">const</span> moveY <span class="token operator">=</span> e<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token punctuation">;</span>

    <span class="token comment">// 计算手指移动的距离</span>
    <span class="token keyword">const</span> distanceX <span class="token operator">=</span> moveX <span class="token operator">-</span> startX<span class="token punctuation">;</span>
    <span class="token keyword">const</span> distanceY <span class="token operator">=</span> moveY <span class="token operator">-</span> startY<span class="token punctuation">;</span>

    <span class="token comment">// 设置按钮的位置</span>
    flotBtn<span class="token punctuation">.</span>style<span class="token punctuation">.</span>right <span class="token operator">=</span>
      Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>
        Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>right <span class="token operator">-</span> distanceX<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientWidth <span class="token operator">-</span> flotBtn<span class="token punctuation">.</span>offsetWidth
      <span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
    flotBtn<span class="token punctuation">.</span>style<span class="token punctuation">.</span>bottom <span class="token operator">=</span>
      Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>
        Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>bottom <span class="token operator">-</span> distanceY<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight <span class="token operator">-</span> flotBtn<span class="token punctuation">.</span>offsetHeight
      <span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>touchstart</code>事件中，我们获取了手指按下的初始坐标，然后在<code>touchmove</code>事件中，我们计算手指移动的距离，并将按钮的位置相应地更新。</p><p>最后，我们添加<code>touchend</code>事件监听器，以便在用户停止触摸屏幕时更新按钮的位置。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 添加touchend事件监听器</span>
flotBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;touchend&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 获取按钮的最终位置</span>
  right <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>flotBtn<span class="token punctuation">.</span>style<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
  bottom <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>flotBtn<span class="token punctuation">.</span>style<span class="token punctuation">.</span>bottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段代码确保当用户停止触摸屏幕时，我们将按钮的最终位置保存在<code>right</code>和<code>bottom</code>变量中。</p><h2 id="完成" tabindex="-1"><a class="header-anchor" href="#完成" aria-hidden="true">#</a> 完成</h2><p>现在，我们已经成功实现了一个可拖动的悬浮按钮！用户可以触摸屏幕并拖动按钮到他们喜欢的位置，然后按钮将保持在那里。</p>`,29),k={href:"https://github.com/yuanwer/web-interaction/blob/main/08-H5%E6%82%AC%E6%B5%AE%E6%8C%89%E9%92%AE%E6%8B%96%E6%8B%BD/01/index.html",target:"_blank",rel:"noopener noreferrer"},v=n("h2",{id:"评论区",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#评论区","aria-hidden":"true"},"#"),t(" 评论区")],-1);function m(b,h){const p=s("ExternalLinkIcon"),e=s("CommentService");return c(),i("div",null,[r,n("p",null,[n("a",k,[t("点击查看源码"),a(p)])]),v,a(e)])}const f=o(d,[["render",m],["__file","index.html.vue"]]);export{f as default};
