import{_ as i,r as e,o as l,c as u,a as n,b as p,d as s,e as a}from"./app-1bbcc8ed.js";const o="/blog-website/assets/record-1694618431204-2-9badc404.gif",d="/blog-website/assets/record-1797bd16.gif",r={},k=a('<h1 id="文件拖拽上传" tabindex="-1"><a class="header-anchor" href="#文件拖拽上传" aria-hidden="true">#</a> 文件拖拽上传</h1><h2 id="效果预览" tabindex="-1"><a class="header-anchor" href="#效果预览" aria-hidden="true">#</a> 效果预览</h2><p><img src="'+o+`" alt="js实现文件拖拽"></p><p>业务开发中，经常有拖拽上传文件的需求，比如上传头像，证件等。</p><p>“拖拽上传” 可以拆解为两部分：</p><ul><li>拖拽：鼠标拖拽文件，移动到指定元素上 —— 属于交互。</li><li>上传：将文件上传到服务器 —— 属于上传逻辑。</li></ul><p>拖拽上传和普通的点击上传，最大的区别在于交互不同，获取到文件之后上传到服务器的方式是一样的。</p><p>我将分享两种方式实现拖拽上传的交互。</p><h2 id="使用-input-自带的能力" tabindex="-1"><a class="header-anchor" href="#使用-input-自带的能力" aria-hidden="true">#</a> 使用 input 自带的能力</h2><p>其实原生的 <code>&lt;input type=&quot;file&quot; /&gt;</code> 元素，就支持拖拽上传的能力。</p><p>代码如下 👨‍💻：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uploadDiv<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uploadInput<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#uploadDiv</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 160px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 160px<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 2px dashed #e8e8e8<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">#uploadInput</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token comment">/*放开下面的代码即可隐藏input元素*/</span>
  <span class="token comment">/*opacity: 0;*/</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> $uploadInput <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#uploadInput&#39;</span><span class="token punctuation">)</span>

$uploadInput<span class="token punctuation">.</span><span class="token function-variable function">onchange</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> file <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
  <span class="token function">uploadFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 上传文件到服务器</span>
<span class="token keyword">function</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果如下 ✨：</p><p><img src="`+d+'" alt="原生input文件拖拽"></p><p>可以看见，监听 <code>input</code> 的 <code>change</code> 事件，就能获取到用户拖拽进来的文件的 <code>File</code>，后续的工作就是将此 <code>File</code> 上传到服务器了。</p><p>有个小细节：想要隐藏 <code>input</code> 元素，可以设置 <code>opacity: 0</code>，让元素完全透明，但不能使用 <code>display: none</code>，因为这样用户就点不到它了，拖拽的文件也无法放到它身上。</p>',18),v={href:"https://github.com/yuanwer/web-interaction/tree/main/01-%E6%96%87%E4%BB%B6%E6%8B%96%E6%8B%BD%E4%B8%8A%E4%BC%A0/%E5%8E%9F%E7%94%9Finput%E8%83%BD%E5%8A%9B",target:"_blank",rel:"noopener noreferrer"},m=a(`<h2 id="通过-js-来实现" tabindex="-1"><a class="header-anchor" href="#通过-js-来实现" aria-hidden="true">#</a> 通过 js 来实现</h2><p>原生的 <code>&lt;input type=&quot;file&quot; /&gt;</code> 元素已经支持拖拽上传，但由于兼容性等原因，你可能需要其他的实现方式，比如使用 js 的能力。</p><h3 id="思路分享" tabindex="-1"><a class="header-anchor" href="#思路分享" aria-hidden="true">#</a> 思路分享</h3><ol><li>创建一个 <code>&lt;div&gt;</code> 元素，作为拖拽区域。</li><li>创建一个 <code>&lt;input type=&quot;file&quot; /&gt;</code> 元素，并隐藏它。</li><li>用户拖拽文件进入/离开拖拽区域的事件，给 <code>&lt;div&gt;</code> 元素添加/移除高亮效果。</li><li>用户拖拽文件在拖拽区域上松手时，获取到文件，并上传到服务器。</li></ol><h3 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现" aria-hidden="true">#</a> 代码实现</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uploadDiv<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uploadInput<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#uploadDiv</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 160px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 160px<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 2px dashed #e8e8e8<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">#uploadDiv.drag-over</span> <span class="token punctuation">{</span>
  <span class="token property">border-color</span><span class="token punctuation">:</span> #498ef3<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">#uploadInput</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> $uploadDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#uploadDiv&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> $uploadInput <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#uploadInput&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 点击 $uploadDiv 时，触发 $uploadInput 的点击事件</span>
<span class="token comment">// 这样就可以触发文件选择对话框</span>
$uploadDiv<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  $uploadInput<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 鼠标拖拽着文件进入 $uploadDiv 区域时，添加高亮效果</span>
$uploadDiv<span class="token punctuation">.</span><span class="token function-variable function">ondragenter</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  $uploadDiv<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;drag-over&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 鼠标拖拽着文件离开 $uploadDiv 区域时，去掉高亮效果</span>
$uploadDiv<span class="token punctuation">.</span><span class="token function-variable function">ondragleave</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  $uploadDiv<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;drag-over&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 鼠标拖拽着文件在 $uploadDiv 区域时，此事件会连续触发，需要阻止默认行为</span>
$uploadDiv<span class="token punctuation">.</span><span class="token function-variable function">ondragover</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 鼠标拖拽着文件在 $uploadDiv 区域松手时触发</span>
$uploadDiv<span class="token punctuation">.</span><span class="token function-variable function">ondrop</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  $uploadDiv<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;drag-over&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// 获取拖拽的文件</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">)</span>
  <span class="token keyword">const</span> file <span class="token operator">=</span> e<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token function">uploadFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

$uploadInput<span class="token punctuation">.</span><span class="token function-variable function">onchange</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> file <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token function">uploadFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 上传文件到服务器</span>
<span class="token keyword">function</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+o+'" alt="js实现文件拖拽"></p><p>代码中用到的几个 js 事件，兼容性都不错，可以在老版本的浏览器上运行。</p><p>阻止默认事件是为了不让浏览器的默认行为干扰我们的交互，当你在网页上进行拖拽操作时，浏览器默认会有一些效果，比如鼠标光标会变成一个禁止图标、甚至会阻止文件的放置。</p>',11),b={href:"https://github.com/yuanwer/web-interaction/tree/main/01-%E6%96%87%E4%BB%B6%E6%8B%96%E6%8B%BD%E4%B8%8A%E4%BC%A0/%E4%BD%BF%E7%94%A8js%E5%AE%9E%E7%8E%B0",target:"_blank",rel:"noopener noreferrer"},g=a('<p>上面的代码只演示了基本的交互实现，如果要实现一个文件上传的完整功能，还需要考虑很多细节，比如文件大小限制、文件类型限制、上传进度条、上传成功和失败处理。</p><h2 id="对比" tabindex="-1"><a class="header-anchor" href="#对比" aria-hidden="true">#</a> 对比</h2><p>两种实现方式的不同主要体现在获取拖拽文件的方式上。使用原生 <code>&lt;input type=&quot;file&quot; /&gt;</code> 元素，只需监听 <code>change</code> 事件，而使用 js 实现，需要多个事件的配合。</p><p>样式的实现，二者区别不大，比如想要用户拖拽的文件在拖拽区域上时，有高亮效果，都需要 js 来配合完成。</p><p>使用 js 实现，兼容性更好，而原生 input 元素的拖拽功能，兼容性不太好，在旧版本浏览器上可能不生效。</p><h2 id="评论区" tabindex="-1"><a class="header-anchor" href="#评论区" aria-hidden="true">#</a> 评论区</h2>',6);function h(f,_){const t=e("ExternalLinkIcon"),c=e("CommentService");return l(),u("div",null,[k,n("p",null,[n("a",v,[p("点击查看源码"),s(t)])]),m,n("p",null,[n("a",b,[p("点击查看源码"),s(t)])]),g,s(c)])}const q=i(r,[["render",h],["__file","01-文件拖拽上传.html.vue"]]);export{q as default};
